//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace Eos.Enteprise {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserServicePortBinding", Namespace="http://eos.com/")]
    public partial class UserService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback authenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchForUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserTOOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserIdByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNewUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback recoverUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserSaltOperationCompleted;
        
        private System.Threading.SendOrPostCallback addFriendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFriendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback authenticateByEmailOperationCompleted;
        
        /// <remarks/>
        public UserService() {
            this.Url = "http://66.90.217.15:8080/eos-services/UserService";
        }
        
        /// <remarks/>
        public event authenticateUserCompletedEventHandler authenticateUserCompleted;
        
        /// <remarks/>
        public event searchForUsersCompletedEventHandler searchForUsersCompleted;
        
        /// <remarks/>
        public event getUserTOCompletedEventHandler getUserTOCompleted;
        
        /// <remarks/>
        public event saveUserCompletedEventHandler saveUserCompleted;
        
        /// <remarks/>
        public event getUsersCompletedEventHandler getUsersCompleted;
        
        /// <remarks/>
        public event getUserIdByUsernameCompletedEventHandler getUserIdByUsernameCompleted;
        
        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;
        
        /// <remarks/>
        public event addNewUserCompletedEventHandler addNewUserCompleted;
        
        /// <remarks/>
        public event recoverUserAccountCompletedEventHandler recoverUserAccountCompleted;
        
        /// <remarks/>
        public event getUserSaltCompletedEventHandler getUserSaltCompleted;
        
        /// <remarks/>
        public event addFriendsCompletedEventHandler addFriendsCompleted;
        
        /// <remarks/>
        public event deleteFriendsCompletedEventHandler deleteFriendsCompleted;
        
        /// <remarks/>
        public event authenticateByEmailCompletedEventHandler authenticateByEmailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("authenticateUser", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTO authenticateUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            object[] results = this.Invoke("authenticateUser", new object[] {
                        username,
                        password});
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginauthenticateUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("authenticateUser", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserTO EndauthenticateUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public void authenticateUserAsync(string username, string password) {
            this.authenticateUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void authenticateUserAsync(string username, string password, object userState) {
            if ((this.authenticateUserOperationCompleted == null)) {
                this.authenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateUserOperationCompleted);
            }
            this.InvokeAsync("authenticateUser", new object[] {
                        username,
                        password}, this.authenticateUserOperationCompleted, userState);
        }
        
        private void OnauthenticateUserOperationCompleted(object arg) {
            if ((this.authenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateUserCompleted(this, new authenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("searchForUsers", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTO[] searchForUsers([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UserTO user) {
            object[] results = this.Invoke("searchForUsers", new object[] {
                        username,
                        user});
            return ((UserTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsearchForUsers(string username, UserTO user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("searchForUsers", new object[] {
                        username,
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserTO[] EndsearchForUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTO[])(results[0]));
        }
        
        /// <remarks/>
        public void searchForUsersAsync(string username, UserTO user) {
            this.searchForUsersAsync(username, user, null);
        }
        
        /// <remarks/>
        public void searchForUsersAsync(string username, UserTO user, object userState) {
            if ((this.searchForUsersOperationCompleted == null)) {
                this.searchForUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchForUsersOperationCompleted);
            }
            this.InvokeAsync("searchForUsers", new object[] {
                        username,
                        user}, this.searchForUsersOperationCompleted, userState);
        }
        
        private void OnsearchForUsersOperationCompleted(object arg) {
            if ((this.searchForUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchForUsersCompleted(this, new searchForUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getUserTO", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTO getUserTO([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int userId) {
            object[] results = this.Invoke("getUserTO", new object[] {
                        userId});
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserTO(int userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserTO", new object[] {
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserTO EndgetUserTO(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public void getUserTOAsync(int userId) {
            this.getUserTOAsync(userId, null);
        }
        
        /// <remarks/>
        public void getUserTOAsync(int userId, object userState) {
            if ((this.getUserTOOperationCompleted == null)) {
                this.getUserTOOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserTOOperationCompleted);
            }
            this.InvokeAsync("getUserTO", new object[] {
                        userId}, this.getUserTOOperationCompleted, userState);
        }
        
        private void OngetUserTOOperationCompleted(object arg) {
            if ((this.getUserTOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserTOCompleted(this, new getUserTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("saveUser", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTO saveUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UserTO arg0) {
            object[] results = this.Invoke("saveUser", new object[] {
                        arg0});
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsaveUser(UserTO arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("saveUser", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserTO EndsaveUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public void saveUserAsync(UserTO arg0) {
            this.saveUserAsync(arg0, null);
        }
        
        /// <remarks/>
        public void saveUserAsync(UserTO arg0, object userState) {
            if ((this.saveUserOperationCompleted == null)) {
                this.saveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveUserOperationCompleted);
            }
            this.InvokeAsync("saveUser", new object[] {
                        arg0}, this.saveUserOperationCompleted, userState);
        }
        
        private void OnsaveUserOperationCompleted(object arg) {
            if ((this.saveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveUserCompleted(this, new saveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getUsers", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTO[] getUsers([System.Xml.Serialization.XmlElementAttribute("ids", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int[] ids) {
            object[] results = this.Invoke("getUsers", new object[] {
                        ids});
            return ((UserTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUsers(int[] ids, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUsers", new object[] {
                        ids}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserTO[] EndgetUsers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTO[])(results[0]));
        }
        
        /// <remarks/>
        public void getUsersAsync(int[] ids) {
            this.getUsersAsync(ids, null);
        }
        
        /// <remarks/>
        public void getUsersAsync(int[] ids, object userState) {
            if ((this.getUsersOperationCompleted == null)) {
                this.getUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersOperationCompleted);
            }
            this.InvokeAsync("getUsers", new object[] {
                        ids}, this.getUsersOperationCompleted, userState);
        }
        
        private void OngetUsersOperationCompleted(object arg) {
            if ((this.getUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersCompleted(this, new getUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getUserIdByUsername", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getUserIdByUsername([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string username) {
            object[] results = this.Invoke("getUserIdByUsername", new object[] {
                        username});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserIdByUsername(string username, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserIdByUsername", new object[] {
                        username}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndgetUserIdByUsername(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getUserIdByUsernameAsync(string username) {
            this.getUserIdByUsernameAsync(username, null);
        }
        
        /// <remarks/>
        public void getUserIdByUsernameAsync(string username, object userState) {
            if ((this.getUserIdByUsernameOperationCompleted == null)) {
                this.getUserIdByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserIdByUsernameOperationCompleted);
            }
            this.InvokeAsync("getUserIdByUsername", new object[] {
                        username}, this.getUserIdByUsernameOperationCompleted, userState);
        }
        
        private void OngetUserIdByUsernameOperationCompleted(object arg) {
            if ((this.getUserIdByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserIdByUsernameCompleted(this, new getUserIdByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("deleteUser", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int arg0) {
            this.Invoke("deleteUser", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteUser(int arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteUser", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteUserAsync(int arg0) {
            this.deleteUserAsync(arg0, null);
        }
        
        /// <remarks/>
        public void deleteUserAsync(int arg0, object userState) {
            if ((this.deleteUserOperationCompleted == null)) {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                        arg0}, this.deleteUserOperationCompleted, userState);
        }
        
        private void OndeleteUserOperationCompleted(object arg) {
            if ((this.deleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("addNewUser", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addNewUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UserTO user) {
            this.Invoke("addNewUser", new object[] {
                        user});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddNewUser(UserTO user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addNewUser", new object[] {
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndaddNewUser(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void addNewUserAsync(UserTO user) {
            this.addNewUserAsync(user, null);
        }
        
        /// <remarks/>
        public void addNewUserAsync(UserTO user, object userState) {
            if ((this.addNewUserOperationCompleted == null)) {
                this.addNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewUserOperationCompleted);
            }
            this.InvokeAsync("addNewUser", new object[] {
                        user}, this.addNewUserOperationCompleted, userState);
        }
        
        private void OnaddNewUserOperationCompleted(object arg) {
            if ((this.addNewUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNewUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("recoverUserAccount", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void recoverUserAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UserTO user) {
            this.Invoke("recoverUserAccount", new object[] {
                        user});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginrecoverUserAccount(UserTO user, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("recoverUserAccount", new object[] {
                        user}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndrecoverUserAccount(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void recoverUserAccountAsync(UserTO user) {
            this.recoverUserAccountAsync(user, null);
        }
        
        /// <remarks/>
        public void recoverUserAccountAsync(UserTO user, object userState) {
            if ((this.recoverUserAccountOperationCompleted == null)) {
                this.recoverUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecoverUserAccountOperationCompleted);
            }
            this.InvokeAsync("recoverUserAccount", new object[] {
                        user}, this.recoverUserAccountOperationCompleted, userState);
        }
        
        private void OnrecoverUserAccountOperationCompleted(object arg) {
            if ((this.recoverUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recoverUserAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getUserSalt", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUserSalt([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int userId) {
            object[] results = this.Invoke("getUserSalt", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserSalt(int userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserSalt", new object[] {
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetUserSalt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserSaltAsync(int userId) {
            this.getUserSaltAsync(userId, null);
        }
        
        /// <remarks/>
        public void getUserSaltAsync(int userId, object userState) {
            if ((this.getUserSaltOperationCompleted == null)) {
                this.getUserSaltOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserSaltOperationCompleted);
            }
            this.InvokeAsync("getUserSalt", new object[] {
                        userId}, this.getUserSaltOperationCompleted, userState);
        }
        
        private void OngetUserSaltOperationCompleted(object arg) {
            if ((this.getUserSaltCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserSaltCompleted(this, new getUserSaltCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("addFriends", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addFriends([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UserTO user1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UserTO user2) {
            this.Invoke("addFriends", new object[] {
                        user1,
                        user2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddFriends(UserTO user1, UserTO user2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addFriends", new object[] {
                        user1,
                        user2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndaddFriends(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void addFriendsAsync(UserTO user1, UserTO user2) {
            this.addFriendsAsync(user1, user2, null);
        }
        
        /// <remarks/>
        public void addFriendsAsync(UserTO user1, UserTO user2, object userState) {
            if ((this.addFriendsOperationCompleted == null)) {
                this.addFriendsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddFriendsOperationCompleted);
            }
            this.InvokeAsync("addFriends", new object[] {
                        user1,
                        user2}, this.addFriendsOperationCompleted, userState);
        }
        
        private void OnaddFriendsOperationCompleted(object arg) {
            if ((this.addFriendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addFriendsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("deleteFriends", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteFriends([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UserTO user1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] UserTO user2) {
            this.Invoke("deleteFriends", new object[] {
                        user1,
                        user2});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteFriends(UserTO user1, UserTO user2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteFriends", new object[] {
                        user1,
                        user2}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteFriends(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteFriendsAsync(UserTO user1, UserTO user2) {
            this.deleteFriendsAsync(user1, user2, null);
        }
        
        /// <remarks/>
        public void deleteFriendsAsync(UserTO user1, UserTO user2, object userState) {
            if ((this.deleteFriendsOperationCompleted == null)) {
                this.deleteFriendsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFriendsOperationCompleted);
            }
            this.InvokeAsync("deleteFriends", new object[] {
                        user1,
                        user2}, this.deleteFriendsOperationCompleted, userState);
        }
        
        private void OndeleteFriendsOperationCompleted(object arg) {
            if ((this.deleteFriendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFriendsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("authenticateByEmail", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTO authenticateByEmail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string email, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            object[] results = this.Invoke("authenticateByEmail", new object[] {
                        email,
                        password});
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginauthenticateByEmail(string email, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("authenticateByEmail", new object[] {
                        email,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserTO EndauthenticateByEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserTO)(results[0]));
        }
        
        /// <remarks/>
        public void authenticateByEmailAsync(string email, string password) {
            this.authenticateByEmailAsync(email, password, null);
        }
        
        /// <remarks/>
        public void authenticateByEmailAsync(string email, string password, object userState) {
            if ((this.authenticateByEmailOperationCompleted == null)) {
                this.authenticateByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateByEmailOperationCompleted);
            }
            this.InvokeAsync("authenticateByEmail", new object[] {
                        email,
                        password}, this.authenticateByEmailOperationCompleted, userState);
        }
        
        private void OnauthenticateByEmailOperationCompleted(object arg) {
            if ((this.authenticateByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateByEmailCompleted(this, new authenticateByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.eos")]
    public partial class UserTO {
        
        private string emailField;
        
        private bool emailVerifiedField;
        
        private System.Nullable<int>[] friendsField;
        
        private int idField;
        
        private string passwordField;
        
        private string recoveryLinkField;
        
        private bool recoveryNeededField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool emailVerified {
            get {
                return this.emailVerifiedField;
            }
            set {
                this.emailVerifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("friends", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public System.Nullable<int>[] friends {
            get {
                return this.friendsField;
            }
            set {
                this.friendsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recoveryLink {
            get {
                return this.recoveryLinkField;
            }
            set {
                this.recoveryLinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool recoveryNeeded {
            get {
                return this.recoveryNeededField;
            }
            set {
                this.recoveryNeededField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void authenticateUserCompletedEventHandler(object sender, authenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void searchForUsersCompletedEventHandler(object sender, searchForUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchForUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchForUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getUserTOCompletedEventHandler(object sender, getUserTOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserTOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserTOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void saveUserCompletedEventHandler(object sender, saveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getUsersCompletedEventHandler(object sender, getUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getUserIdByUsernameCompletedEventHandler(object sender, getUserIdByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserIdByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserIdByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void addNewUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void recoverUserAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getUserSaltCompletedEventHandler(object sender, getUserSaltCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserSaltCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserSaltCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void addFriendsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteFriendsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void authenticateByEmailCompletedEventHandler(object sender, authenticateByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenticateByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SubjectServicePortBinding", Namespace="http://eos.com/")]
    public partial class SubjectService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback deleteSubjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSubjectsByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addTaskToSubjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveSubjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubjectOperationCompleted;
        
        /// <remarks/>
        public SubjectService() {
            this.Url = "http://66.90.217.15:8080/eos-services/SubjectService";
        }
        
        /// <remarks/>
        public event deleteSubjectCompletedEventHandler deleteSubjectCompleted;
        
        /// <remarks/>
        public event getAllSubjectsByUserCompletedEventHandler getAllSubjectsByUserCompleted;
        
        /// <remarks/>
        public event addTaskToSubjectCompletedEventHandler addTaskToSubjectCompleted;
        
        /// <remarks/>
        public event saveSubjectCompletedEventHandler saveSubjectCompleted;
        
        /// <remarks/>
        public event getSubjectCompletedEventHandler getSubjectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("deleteSubject", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteSubject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id) {
            this.Invoke("deleteSubject", new object[] {
                        id});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteSubject(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteSubject", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteSubject(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteSubjectAsync(int id) {
            this.deleteSubjectAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteSubjectAsync(int id, object userState) {
            if ((this.deleteSubjectOperationCompleted == null)) {
                this.deleteSubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSubjectOperationCompleted);
            }
            this.InvokeAsync("deleteSubject", new object[] {
                        id}, this.deleteSubjectOperationCompleted, userState);
        }
        
        private void OndeleteSubjectOperationCompleted(object arg) {
            if ((this.deleteSubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSubjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getAllSubjectsByUser", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SubjectTO[] getAllSubjectsByUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int userId) {
            object[] results = this.Invoke("getAllSubjectsByUser", new object[] {
                        userId});
            return ((SubjectTO[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAllSubjectsByUser(int userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAllSubjectsByUser", new object[] {
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public SubjectTO[] EndgetAllSubjectsByUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubjectTO[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllSubjectsByUserAsync(int userId) {
            this.getAllSubjectsByUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void getAllSubjectsByUserAsync(int userId, object userState) {
            if ((this.getAllSubjectsByUserOperationCompleted == null)) {
                this.getAllSubjectsByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSubjectsByUserOperationCompleted);
            }
            this.InvokeAsync("getAllSubjectsByUser", new object[] {
                        userId}, this.getAllSubjectsByUserOperationCompleted, userState);
        }
        
        private void OngetAllSubjectsByUserOperationCompleted(object arg) {
            if ((this.getAllSubjectsByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSubjectsByUserCompleted(this, new getAllSubjectsByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("addTaskToSubject", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SubjectTO addTaskToSubject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] TaskTO task, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SubjectTO subject) {
            object[] results = this.Invoke("addTaskToSubject", new object[] {
                        task,
                        subject});
            return ((SubjectTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddTaskToSubject(TaskTO task, SubjectTO subject, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addTaskToSubject", new object[] {
                        task,
                        subject}, callback, asyncState);
        }
        
        /// <remarks/>
        public SubjectTO EndaddTaskToSubject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubjectTO)(results[0]));
        }
        
        /// <remarks/>
        public void addTaskToSubjectAsync(TaskTO task, SubjectTO subject) {
            this.addTaskToSubjectAsync(task, subject, null);
        }
        
        /// <remarks/>
        public void addTaskToSubjectAsync(TaskTO task, SubjectTO subject, object userState) {
            if ((this.addTaskToSubjectOperationCompleted == null)) {
                this.addTaskToSubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTaskToSubjectOperationCompleted);
            }
            this.InvokeAsync("addTaskToSubject", new object[] {
                        task,
                        subject}, this.addTaskToSubjectOperationCompleted, userState);
        }
        
        private void OnaddTaskToSubjectOperationCompleted(object arg) {
            if ((this.addTaskToSubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addTaskToSubjectCompleted(this, new addTaskToSubjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("saveSubject", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SubjectTO saveSubject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] SubjectTO arg0) {
            object[] results = this.Invoke("saveSubject", new object[] {
                        arg0});
            return ((SubjectTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsaveSubject(SubjectTO arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("saveSubject", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public SubjectTO EndsaveSubject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubjectTO)(results[0]));
        }
        
        /// <remarks/>
        public void saveSubjectAsync(SubjectTO arg0) {
            this.saveSubjectAsync(arg0, null);
        }
        
        /// <remarks/>
        public void saveSubjectAsync(SubjectTO arg0, object userState) {
            if ((this.saveSubjectOperationCompleted == null)) {
                this.saveSubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveSubjectOperationCompleted);
            }
            this.InvokeAsync("saveSubject", new object[] {
                        arg0}, this.saveSubjectOperationCompleted, userState);
        }
        
        private void OnsaveSubjectOperationCompleted(object arg) {
            if ((this.saveSubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveSubjectCompleted(this, new saveSubjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getSubject", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SubjectTO getSubject([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int subjectId) {
            object[] results = this.Invoke("getSubject", new object[] {
                        subjectId});
            return ((SubjectTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSubject(int subjectId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSubject", new object[] {
                        subjectId}, callback, asyncState);
        }
        
        /// <remarks/>
        public SubjectTO EndgetSubject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SubjectTO)(results[0]));
        }
        
        /// <remarks/>
        public void getSubjectAsync(int subjectId) {
            this.getSubjectAsync(subjectId, null);
        }
        
        /// <remarks/>
        public void getSubjectAsync(int subjectId, object userState) {
            if ((this.getSubjectOperationCompleted == null)) {
                this.getSubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubjectOperationCompleted);
            }
            this.InvokeAsync("getSubject", new object[] {
                        subjectId}, this.getSubjectOperationCompleted, userState);
        }
        
        private void OngetSubjectOperationCompleted(object arg) {
            if ((this.getSubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubjectCompleted(this, new getSubjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.eos")]
    public partial class SubjectTO {
        
        private string colorField;
        
        private bool deletedField;
        
        private string detailsField;
        
        private EventTO eventField;
        
        private int idField;
        
        private UserTO ownerField;
        
        private int radiusField;
        
        private bool sharedField;
        
        private UserTO[] sharedUsersField;
        
        private TaskTO[] tasksField;
        
        private string titleField;
        
        private int xPosField;
        
        private int yPosField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EventTO @event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTO owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int radius {
            get {
                return this.radiusField;
            }
            set {
                this.radiusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool shared {
            get {
                return this.sharedField;
            }
            set {
                this.sharedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sharedUsers", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public UserTO[] sharedUsers {
            get {
                return this.sharedUsersField;
            }
            set {
                this.sharedUsersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("tasks", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public TaskTO[] tasks {
            get {
                return this.tasksField;
            }
            set {
                this.tasksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int XPos {
            get {
                return this.xPosField;
            }
            set {
                this.xPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int YPos {
            get {
                return this.yPosField;
            }
            set {
                this.yPosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.eos")]
    public partial class EventTO {
        
        private bool deletedField;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private int idField;
        
        private string locationField;
        
        private System.DateTime reminderTimeField;
        
        private bool reminderTimeFieldSpecified;
        
        private bool repeatsField;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime reminderTime {
            get {
                return this.reminderTimeField;
            }
            set {
                this.reminderTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reminderTimeSpecified {
            get {
                return this.reminderTimeFieldSpecified;
            }
            set {
                this.reminderTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool repeats {
            get {
                return this.repeatsField;
            }
            set {
                this.repeatsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://eos.com/")]
    public partial class binaryTO {
        
        private byte[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.eos")]
    public partial class AttachmentTO {
        
        private bool deletedField;
        
        private binaryTO fileDataField;
        
        private string fileDescriptionField;
        
        private string fileNameField;
        
        private long fileSizeField;
        
        private int idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public binaryTO fileData {
            get {
                return this.fileDataField;
            }
            set {
                this.fileDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileDescription {
            get {
                return this.fileDescriptionField;
            }
            set {
                this.fileDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="com.eos")]
    public partial class TaskTO {
        
        private AttachmentTO[] attachmentsField;
        
        private string colorField;
        
        private string commentsField;
        
        private bool deletedField;
        
        private EventTO eventField;
        
        private int idField;
        
        private UserTO ownerField;
        
        private string titleField;
        
        private int xPosField;
        
        private int yPosField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachments", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public AttachmentTO[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EventTO @event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public UserTO owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int XPos {
            get {
                return this.xPosField;
            }
            set {
                this.xPosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int YPos {
            get {
                return this.yPosField;
            }
            set {
                this.yPosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteSubjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getAllSubjectsByUserCompletedEventHandler(object sender, getAllSubjectsByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSubjectsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSubjectsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubjectTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubjectTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void addTaskToSubjectCompletedEventHandler(object sender, addTaskToSubjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addTaskToSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addTaskToSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubjectTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubjectTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void saveSubjectCompletedEventHandler(object sender, saveSubjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubjectTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubjectTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void getSubjectCompletedEventHandler(object sender, getSubjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubjectTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubjectTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TaskServicePortBinding", Namespace="http://eos.com/")]
    public partial class TaskService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback saveTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteTaskOperationCompleted;
        
        /// <remarks/>
        public TaskService() {
            this.Url = "http://66.90.217.15:8080/eos-services/TaskService";
        }
        
        /// <remarks/>
        public event saveTaskCompletedEventHandler saveTaskCompleted;
        
        /// <remarks/>
        public event deleteTaskCompletedEventHandler deleteTaskCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("saveTask", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TaskTO saveTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] TaskTO arg0) {
            object[] results = this.Invoke("saveTask", new object[] {
                        arg0});
            return ((TaskTO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsaveTask(TaskTO arg0, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("saveTask", new object[] {
                        arg0}, callback, asyncState);
        }
        
        /// <remarks/>
        public TaskTO EndsaveTask(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TaskTO)(results[0]));
        }
        
        /// <remarks/>
        public void saveTaskAsync(TaskTO arg0) {
            this.saveTaskAsync(arg0, null);
        }
        
        /// <remarks/>
        public void saveTaskAsync(TaskTO arg0, object userState) {
            if ((this.saveTaskOperationCompleted == null)) {
                this.saveTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveTaskOperationCompleted);
            }
            this.InvokeAsync("saveTask", new object[] {
                        arg0}, this.saveTaskOperationCompleted, userState);
        }
        
        private void OnsaveTaskOperationCompleted(object arg) {
            if ((this.saveTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveTaskCompleted(this, new saveTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("deleteTask", RequestNamespace="http://eos.com/", ResponseNamespace="http://eos.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int id) {
            this.Invoke("deleteTask", new object[] {
                        id});
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteTask(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteTask", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EnddeleteTask(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void deleteTaskAsync(int id) {
            this.deleteTaskAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteTaskAsync(int id, object userState) {
            if ((this.deleteTaskOperationCompleted == null)) {
                this.deleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTaskOperationCompleted);
            }
            this.InvokeAsync("deleteTask", new object[] {
                        id}, this.deleteTaskOperationCompleted, userState);
        }
        
        private void OndeleteTaskOperationCompleted(object arg) {
            if ((this.deleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void saveTaskCompletedEventHandler(object sender, saveTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void deleteTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
